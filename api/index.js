Index.PACKAGES = {"libra" : [{"name" : "libra.Dimensions", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Dimensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Dimensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Dimensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Dimensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Dimensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Dimensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Dimensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Dimensions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Dimensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Dimensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Dimensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Dimensions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Dimensions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Dimensions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Dimensions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Dimensions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Dimensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Dimensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Dimensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents the dimensions of a quantity, in base units", "trait" : "libra\/Dimensions.html", "kind" : "trait"}, {"name" : "libra.Quantity", "shortDescription" : "Represents a quantity in standard index form", "members_case class" : [{"label" : "^", "tail" : "(pow: P)(p: Power[Quantity[A, I, D], P]): Out", "member" : "libra.Quantity.^", "link" : "libra\/Quantity.html#^[P<:SingletonwithInt](pow:P)(implicitp:libra.ops.quantity.Power[libra.Quantity[A,I,D],P]):p.Out", "kind" : "def"}, {"label" : "\/", "tail" : "(q1: Quantity[A, I1, D1])(d: Divide[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.\/", "link" : "libra\/Quantity.html#\/[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):d.Out", "kind" : "def"}, {"label" : "*", "tail" : "(q1: Quantity[A, I1, D1])(m: Multiply[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.*", "link" : "libra\/Quantity.html#*[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):m.Out", "kind" : "def"}, {"label" : "-", "tail" : "(q1: Quantity[A, I1, D1])(a: Add[Quantity[A, I, D], Quantity[A, I1, D1]], g: AdditiveGroup[A]): Out", "member" : "libra.Quantity.-", "link" : "libra\/Quantity.html#-[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]],implicitg:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "+", "tail" : "(q1: Quantity[A, I1, D1])(a: Add[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.+", "link" : "libra\/Quantity.html#+[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):a.Out", "kind" : "def"}, {"label" : "baseValue", "tail" : "()(v: ValueOf[I], C: ConvertableTo[A], M: MultiplicativeSemigroup[A]): A", "member" : "libra.Quantity.baseValue", "link" : "libra\/Quantity.html#baseValue()(implicitv:ValueOf[I],implicitC:spire.math.ConvertableTo[A],implicitM:spire.algebra.MultiplicativeSemigroup[A]):A", "kind" : "def"}, {"label" : "show", "tail" : "()(s: Show[Quantity[A, I, D]]): String", "member" : "libra.Quantity.show", "link" : "libra\/Quantity.html#show()(implicits:libra.ops.quantity.Show[libra.Quantity[A,I,D]]):String", "kind" : "def"}, {"label" : "power", "tail" : "()(p: Power[Quantity[A, I, D], P]): Out", "member" : "libra.Quantity.power", "link" : "libra\/Quantity.html#power[P<:SingletonwithInt]()(implicitp:libra.ops.quantity.Power[libra.Quantity[A,I,D],P]):p.Out", "kind" : "def"}, {"label" : "divide", "tail" : "(q1: Quantity[A, I1, D1])(d: Divide[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.divide", "link" : "libra\/Quantity.html#divide[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):d.Out", "kind" : "def"}, {"label" : "multiply", "tail" : "(q1: Quantity[A, I1, D1])(m: Multiply[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.multiply", "link" : "libra\/Quantity.html#multiply[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):m.Out", "kind" : "def"}, {"label" : "invert", "tail" : "()(i: Invert[Quantity[A, I, D]]): Out", "member" : "libra.Quantity.invert", "link" : "libra\/Quantity.html#invert()(impliciti:libra.ops.quantity.Invert[libra.Quantity[A,I,D]]):i.Out", "kind" : "def"}, {"label" : "exp", "tail" : "()(p: Exp[Quantity[A, I, D], I1]): Out", "member" : "libra.Quantity.exp", "link" : "libra\/Quantity.html#exp[I1<:SingletonwithInt]()(implicitp:libra.ops.quantity.Exp[libra.Quantity[A,I,D],I1]):p.Out", "kind" : "def"}, {"label" : "subtract", "tail" : "(q1: Quantity[A, I1, D1])(a: Add[Quantity[A, I, D], Quantity[A, I1, D1]], group: AdditiveGroup[A]): Out", "member" : "libra.Quantity.subtract", "link" : "libra\/Quantity.html#subtract[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]],implicitgroup:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "negate", "tail" : "()(ev: AdditiveGroup[A]): Quantity[A, I, D]", "member" : "libra.Quantity.negate", "link" : "libra\/Quantity.html#negate()(implicitev:spire.algebra.AdditiveGroup[A]):libra.Quantity[A,I,D]", "kind" : "def"}, {"label" : "add", "tail" : "(q1: Quantity[A, I1, D1])(a: Add[Quantity[A, I, D], Quantity[A, I1, D1]]): Out", "member" : "libra.Quantity.add", "link" : "libra\/Quantity.html#add[I1<:SingletonwithInt,D1<:libra.Dimensions[_,_]](q1:libra.Quantity[A,I1,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,I,D],libra.Quantity[A,I1,D1]]):a.Out", "kind" : "def"}, {"member" : "libra.Quantity#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "libra.Quantity.value", "link" : "libra\/Quantity.html#value:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Quantity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Quantity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Quantity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Quantity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Quantity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Quantity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Quantity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Quantity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Quantity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Quantity.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Quantity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Quantity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Quantity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "libra\/Quantity.html", "kind" : "case class"}], "libra.ops" : [{"name" : "libra.ops.base", "shortDescription" : "", "object" : "libra\/ops\/base$.html", "members_object" : [{"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.base.ShowUnit", "link" : "libra\/ops\/base$.html#ShowUnit", "kind" : "object"}, {"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.base.ShowUnit", "link" : "libra\/ops\/base$.html#ShowUnit[A]extendsbase.Show[A]", "kind" : "trait"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.base.ShowDimension", "link" : "libra\/ops\/base$.html#ShowDimension", "kind" : "object"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.base.ShowDimension", "link" : "libra\/ops\/base$.html#ShowDimension[A]extendsbase.Show[A]", "kind" : "trait"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.base.Show", "link" : "libra\/ops\/base$.html#Show[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/base$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/base$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/base$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/base$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/base$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/base$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/base$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/base$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/base$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/base$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/base$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/base$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/base$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/base$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/base$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/base$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.dimensions", "shortDescription" : "", "object" : "libra\/ops\/dimensions$.html", "members_object" : [{"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit", "kind" : "object"}, {"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit[D]extendsAnyRef", "kind" : "trait"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension", "kind" : "object"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension[D]extendsAnyRef", "kind" : "trait"}, {"label" : "TermList", "tail" : "", "member" : "libra.ops.dimensions.TermList", "link" : "libra\/ops\/dimensions$.html#TermList", "kind" : "object"}, {"label" : "TermList", "tail" : "", "member" : "libra.ops.dimensions.TermList", "link" : "libra\/ops\/dimensions$.html#TermList[L<:shapeless.HList,S[_]<:libra.ops.base.Show[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "Term", "tail" : "", "member" : "libra.ops.dimensions.Term", "link" : "libra\/ops\/dimensions$.html#Term", "kind" : "object"}, {"label" : "Term", "tail" : "", "member" : "libra.ops.dimensions.Term", "link" : "libra\/ops\/dimensions$.html#Term[D,I<:shapeless.Nat,S[_]<:libra.ops.base.Show[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power[D<:libra.Dimensions[_,_],P<:SingletonwithInt]extendsAnyRef", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide[L<:libra.Dimensions[_,_],R<:libra.Dimensions[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert[D<:libra.Dimensions[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply[L<:libra.Dimensions[_,_],R<:libra.Dimensions[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.dimensions.Simplify", "link" : "libra\/ops\/dimensions$.html#Simplify", "kind" : "object"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.dimensions.Simplify", "link" : "libra\/ops\/dimensions$.html#Simplify[D<:libra.Dimensions[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Eq", "tail" : "", "member" : "libra.ops.dimensions.Eq", "link" : "libra\/ops\/dimensions$.html#Eq", "kind" : "object"}, {"label" : "Eq", "tail" : "", "member" : "libra.ops.dimensions.Eq", "link" : "libra\/ops\/dimensions$.html#Eq[L<:libra.Dimensions[_,_],R<:libra.Dimensions[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/dimensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/dimensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/dimensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/dimensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/dimensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/dimensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/dimensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/dimensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/dimensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/dimensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/dimensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/dimensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/dimensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/dimensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/dimensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/dimensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "libra.ops.dimensions.Denominator", "error" : "unsupported entity"}, {"member" : "libra.ops.dimensions.Numerator", "error" : "unsupported entity"}], "kind" : "object"}, {"name" : "libra.ops.quantity", "shortDescription" : "", "object" : "libra\/ops\/quantity$.html", "members_object" : [{"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show", "kind" : "object"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show[Q<:libra.Quantity[_,_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power[Q<:libra.Quantity[_,_,_],P<:SingletonwithInt]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide[L<:libra.Quantity[_,_,_],R<:libra.Quantity[_,_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert[Q<:libra.Quantity[_,_,_]]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply[L<:libra.Quantity[_,_,_],R<:libra.Quantity[_,_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add", "kind" : "object"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add[L<:libra.Quantity[_,_,_],R<:libra.Quantity[_,_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "Exp", "tail" : "", "member" : "libra.ops.quantity.Exp", "link" : "libra\/ops\/quantity$.html#Exp", "kind" : "object"}, {"label" : "Exp", "tail" : "", "member" : "libra.ops.quantity.Exp", "link" : "libra\/ops\/quantity$.html#Exp[Q<:libra.Quantity[_,_,_],I<:SingletonwithInt]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/quantity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/quantity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/quantity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/quantity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/quantity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/quantity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/quantity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/quantity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/quantity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/quantity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/quantity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/quantity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/quantity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/quantity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/quantity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/quantity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "libra.si" : [{"name" : "libra.si.BaseQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "mA", "tail" : "(): QuantityOf[A, -3, Current]", "member" : "libra.si.BaseQuantityOps.mA", "link" : "libra\/si\/package$$BaseQuantityOps.html#mA:libra.QuantityOf[A,-3,libra.si.package.Current]", "kind" : "def"}, {"label" : "A", "tail" : "(): QuantityOf[A, 0, Current]", "member" : "libra.si.BaseQuantityOps.A", "link" : "libra\/si\/package$$BaseQuantityOps.html#A:libra.QuantityOf[A,0,libra.si.package.Current]", "kind" : "def"}, {"label" : "ms", "tail" : "(): QuantityOf[A, -3, Time]", "member" : "libra.si.BaseQuantityOps.ms", "link" : "libra\/si\/package$$BaseQuantityOps.html#ms:libra.QuantityOf[A,-3,libra.si.package.Time]", "kind" : "def"}, {"label" : "s", "tail" : "(): QuantityOf[A, 0, Time]", "member" : "libra.si.BaseQuantityOps.s", "link" : "libra\/si\/package$$BaseQuantityOps.html#s:libra.QuantityOf[A,0,libra.si.package.Time]", "kind" : "def"}, {"label" : "mg", "tail" : "(): QuantityOf[A, -6, Mass]", "member" : "libra.si.BaseQuantityOps.mg", "link" : "libra\/si\/package$$BaseQuantityOps.html#mg:libra.QuantityOf[A,-6,libra.si.package.Mass]", "kind" : "def"}, {"label" : "g", "tail" : "(): QuantityOf[A, -3, Mass]", "member" : "libra.si.BaseQuantityOps.g", "link" : "libra\/si\/package$$BaseQuantityOps.html#g:libra.QuantityOf[A,-3,libra.si.package.Mass]", "kind" : "def"}, {"label" : "kg", "tail" : "(): QuantityOf[A, 0, Mass]", "member" : "libra.si.BaseQuantityOps.kg", "link" : "libra\/si\/package$$BaseQuantityOps.html#kg:libra.QuantityOf[A,0,libra.si.package.Mass]", "kind" : "def"}, {"label" : "mm", "tail" : "(): QuantityOf[A, -3, Length]", "member" : "libra.si.BaseQuantityOps.mm", "link" : "libra\/si\/package$$BaseQuantityOps.html#mm:libra.QuantityOf[A,-3,libra.si.package.Length]", "kind" : "def"}, {"label" : "cm", "tail" : "(): QuantityOf[A, -2, Length]", "member" : "libra.si.BaseQuantityOps.cm", "link" : "libra\/si\/package$$BaseQuantityOps.html#cm:libra.QuantityOf[A,-2,libra.si.package.Length]", "kind" : "def"}, {"label" : "m", "tail" : "(): QuantityOf[A, 0, Length]", "member" : "libra.si.BaseQuantityOps.m", "link" : "libra\/si\/package$$BaseQuantityOps.html#m:libra.QuantityOf[A,0,libra.si.package.Length]", "kind" : "def"}, {"label" : "km", "tail" : "(): QuantityOf[A, 3, Length]", "member" : "libra.si.BaseQuantityOps.km", "link" : "libra\/si\/package$$BaseQuantityOps.html#km:libra.QuantityOf[A,3,libra.si.package.Length]", "kind" : "def"}, {"member" : "libra.si.BaseQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.BaseQuantityOps.a", "link" : "libra\/si\/package$$BaseQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$BaseQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$BaseQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$BaseQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$BaseQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$BaseQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$BaseQuantityOps.html", "kind" : "class"}]};