Index.PACKAGES = {"libra" : [{"name" : "libra.Fraction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Fraction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Fraction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Fraction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Fraction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Fraction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Fraction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Fraction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Fraction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Fraction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Fraction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Fraction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Fraction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Fraction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Fraction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Fraction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Fraction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents a fraction", "trait" : "libra\/Fraction.html", "kind" : "trait"}, {"name" : "libra.Quantity", "shortDescription" : "Represents a dimensional quantity", "object" : "libra\/Quantity$.html", "members_object" : [{"label" : "quantityModule", "tail" : "(R: Ring[A], ev: Align[D, D]): Module[Quantity[A, D], A]", "member" : "libra.Quantity.quantityModule", "link" : "libra\/Quantity$.html#quantityModule[A,D<:shapeless.HList](implicitR:spire.algebra.Ring[A],implicitev:shapeless.ops.hlist.Align[D,D]):spire.algebra.Module[libra.Quantity[A,D],A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Quantity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Quantity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Quantity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Quantity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Quantity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Quantity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Quantity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Quantity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Quantity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Quantity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Quantity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Quantity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Quantity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Quantity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Quantity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Quantity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "to", "tail" : "(to: ConvertTo[Quantity[A, D], U]): Out", "member" : "libra.Quantity.to", "link" : "libra\/Quantity.html#to[U<:libra.Unit[_]](implicitto:libra.ops.quantity.ConvertTo[libra.Quantity[A,D],U]):to.Out", "kind" : "def"}, {"label" : "^", "tail" : "(pow: P)(p: Power[Quantity[A, D], P]): Out", "member" : "libra.Quantity.^", "link" : "libra\/Quantity.html#^[P<:SingletonwithInt](pow:P)(implicitp:libra.ops.quantity.Power[libra.Quantity[A,D],P]):p.Out", "kind" : "def"}, {"label" : "\/", "tail" : "(q1: Quantity[A, D1])(d: Divide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.\/", "link" : "libra\/Quantity.html#\/[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "*", "tail" : "(q1: Quantity[A, D1])(m: Multiply[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.*", "link" : "libra\/Quantity.html#*[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,D],libra.Quantity[A,D1]]):m.Out", "kind" : "def"}, {"label" : "-", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]], g: AdditiveGroup[A]): Out", "member" : "libra.Quantity.-", "link" : "libra\/Quantity.html#-[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]],implicitg:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "+", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.+", "link" : "libra\/Quantity.html#+[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]]):a.Out", "kind" : "def"}, {"label" : "show", "tail" : "()(s: Show[Quantity[A, D]]): String", "member" : "libra.Quantity.show", "link" : "libra\/Quantity.html#show()(implicits:libra.ops.quantity.Show[libra.Quantity[A,D]]):String", "kind" : "def"}, {"label" : "power", "tail" : "()(p: Power[Quantity[A, D], P]): Out", "member" : "libra.Quantity.power", "link" : "libra\/Quantity.html#power[P<:SingletonwithInt]()(implicitp:libra.ops.quantity.Power[libra.Quantity[A,D],P]):p.Out", "kind" : "def"}, {"label" : "divide", "tail" : "(q1: Quantity[A, D1])(d: Divide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.divide", "link" : "libra\/Quantity.html#divide[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "multiply", "tail" : "(q1: Quantity[A, D1])(m: Multiply[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.multiply", "link" : "libra\/Quantity.html#multiply[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,D],libra.Quantity[A,D1]]):m.Out", "kind" : "def"}, {"label" : "invert", "tail" : "()(i: Invert[Quantity[A, D]]): Out", "member" : "libra.Quantity.invert", "link" : "libra\/Quantity.html#invert()(impliciti:libra.ops.quantity.Invert[libra.Quantity[A,D]]):i.Out", "kind" : "def"}, {"label" : "subtract", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]], group: AdditiveGroup[A]): Out", "member" : "libra.Quantity.subtract", "link" : "libra\/Quantity.html#subtract[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]],implicitgroup:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "negate", "tail" : "()(ev: AdditiveGroup[A]): Quantity[A, D]", "member" : "libra.Quantity.negate", "link" : "libra\/Quantity.html#negate()(implicitev:spire.algebra.AdditiveGroup[A]):libra.Quantity[A,D]", "kind" : "def"}, {"label" : "add", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.add", "link" : "libra\/Quantity.html#add[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]]):a.Out", "kind" : "def"}, {"member" : "libra.Quantity#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "libra.Quantity.value", "link" : "libra\/Quantity.html#value:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/Quantity.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/Quantity.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Quantity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Quantity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/Quantity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/Quantity.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "libra\/Quantity.html", "kind" : "case class"}, {"name" : "libra.Unit", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Unit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Unit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Unit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Unit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Unit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Unit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Unit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Unit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Unit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Unit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Unit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Unit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Unit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Unit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Unit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Unit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Unit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Unit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Unit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents a unit of a given dimension", "trait" : "libra\/Unit.html", "kind" : "trait"}], "libra.ops" : [{"name" : "libra.ops.base", "shortDescription" : "", "object" : "libra\/ops\/base$.html", "members_object" : [{"label" : "Conversion", "tail" : "", "member" : "libra.ops.base.Conversion", "link" : "libra\/ops\/base$.html#Conversion", "kind" : "object"}, {"label" : "Conversion", "tail" : "", "member" : "libra.ops.base.Conversion", "link" : "libra\/ops\/base$.html#Conversion[A,D,F<:libra.Unit[D],T<:libra.Unit[D]]extendsAnyRef", "kind" : "class"}, {"label" : "ConversionFactor", "tail" : "", "member" : "libra.ops.base.ConversionFactor", "link" : "libra\/ops\/base$.html#ConversionFactor[A,D,F<:libra.Unit[D],T<:libra.Unit[D]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.base.Show", "link" : "libra\/ops\/base$.html#Show", "kind" : "object"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.base.Show", "link" : "libra\/ops\/base$.html#Show[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/base$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/base$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/base$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/base$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/base$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/base$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/base$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/base$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/base$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/base$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/base$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/base$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/base$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/base$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/base$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/base$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.dimensions", "shortDescription" : "", "object" : "libra\/ops\/dimensions$.html", "members_object" : [{"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit", "kind" : "object"}, {"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension", "kind" : "object"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.dimensions.ConvertTo", "link" : "libra\/ops\/dimensions$.html#ConvertTo", "kind" : "object"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.dimensions.ConvertTo", "link" : "libra\/ops\/dimensions$.html#ConvertTo[A,UT<:libra.Unit[_],H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Root", "tail" : "", "member" : "libra.ops.dimensions.Root", "link" : "libra\/ops\/dimensions$.html#Root", "kind" : "object"}, {"label" : "Root", "tail" : "", "member" : "libra.ops.dimensions.Root", "link" : "libra\/ops\/dimensions$.html#Root[P<:singleton.ops.XInt,H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power[P<:singleton.ops.XInt,H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide[L<:shapeless.HList,R<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply[L<:shapeless.HList,R<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "MultiplyMerged", "tail" : "", "member" : "libra.ops.dimensions.MultiplyMerged", "link" : "libra\/ops\/dimensions$.html#MultiplyMerged", "kind" : "object"}, {"label" : "MultiplyMerged", "tail" : "", "member" : "libra.ops.dimensions.MultiplyMerged", "link" : "libra\/ops\/dimensions$.html#MultiplyMerged[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/dimensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/dimensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/dimensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/dimensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/dimensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/dimensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/dimensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/dimensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/dimensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/dimensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/dimensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/dimensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/dimensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/dimensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/dimensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/dimensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.fraction", "shortDescription" : "", "object" : "libra\/ops\/fraction$.html", "members_object" : [{"label" : "Valid", "tail" : "", "member" : "libra.ops.fraction.Valid", "link" : "libra\/ops\/fraction$.html#Valid", "kind" : "object"}, {"label" : "Valid", "tail" : "", "member" : "libra.ops.fraction.Valid", "link" : "libra\/ops\/fraction$.html#Valid[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.fraction.Multiply", "link" : "libra\/ops\/fraction$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.fraction.Multiply", "link" : "libra\/ops\/fraction$.html#Multiply[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Subtract", "tail" : "", "member" : "libra.ops.fraction.Subtract", "link" : "libra\/ops\/fraction$.html#Subtract", "kind" : "object"}, {"label" : "Subtract", "tail" : "", "member" : "libra.ops.fraction.Subtract", "link" : "libra\/ops\/fraction$.html#Subtract[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.fraction.Add", "link" : "libra\/ops\/fraction$.html#Add", "kind" : "object"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.fraction.Add", "link" : "libra\/ops\/fraction$.html#Add[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.fraction.Simplify", "link" : "libra\/ops\/fraction$.html#Simplify", "kind" : "object"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.fraction.Simplify", "link" : "libra\/ops\/fraction$.html#Simplify[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Negate", "tail" : "", "member" : "libra.ops.fraction.Negate", "link" : "libra\/ops\/fraction$.html#Negate", "kind" : "object"}, {"label" : "Negate", "tail" : "", "member" : "libra.ops.fraction.Negate", "link" : "libra\/ops\/fraction$.html#Negate[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "GCD", "tail" : "", "member" : "libra.ops.fraction.GCD", "link" : "libra\/ops\/fraction$.html#GCD", "kind" : "object"}, {"label" : "GCD", "tail" : "", "member" : "libra.ops.fraction.GCD", "link" : "libra\/ops\/fraction$.html#GCD[A<:singleton.ops.XInt,B<:singleton.ops.XInt]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/fraction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/fraction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/fraction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/fraction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/fraction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/fraction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/fraction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/fraction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/fraction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/fraction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/fraction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/fraction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/fraction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/fraction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/fraction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/fraction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.Merge", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Merge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Merge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Merge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Merge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Merge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Merge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Merge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Merge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Merge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Merge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Merge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Merge.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Merge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Merge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Merge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Merge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "libra.ops.Merge.Out", "error" : "unsupported entity"}], "shortDescription" : "Typeclass for merging two records", "object" : "libra\/ops\/Merge$.html", "members_object" : [{"label" : "recordExtraMergeNotInRight", "tail" : "(ev0: Refute[Selector[R, K]], ev1: Aux[LTail, R, OutTail]): Aux[::[FieldType[K, LV], LTail], R, ::[FieldType[K, LV], OutTail]]", "member" : "libra.ops.Merge.recordExtraMergeNotInRight", "link" : "libra\/ops\/Merge$.html#recordExtraMergeNotInRight[K,LV,R<:shapeless.HList,LTail<:shapeless.HList,OutTail<:shapeless.HList](implicitev0:libra.ops.Refute[shapeless.ops.record.Selector[R,K]],implicitev1:libra.ops.Merge.Aux[LTail,R,OutTail]):libra.ops.Merge.Aux[shapeless.labelled.FieldType[K,LV]::LTail,R,shapeless.labelled.FieldType[K,LV]::OutTail]", "kind" : "implicit def"}, {"label" : "recordExtraMergeInBoth", "tail" : "(ev0: shapeless.ops.record.Selector.Aux[R, K, RV], ev1: shapeless.ops.hlist.FilterNot.Aux[R, FieldType[K, RV], RTail], ev2: Aux[LTail, RTail, OutTail]): Aux[::[FieldType[K, LV], LTail], R, ::[FieldType[K, (LV, RV)], OutTail]]", "member" : "libra.ops.Merge.recordExtraMergeInBoth", "link" : "libra\/ops\/Merge$.html#recordExtraMergeInBoth[K,LV,RV,R<:shapeless.HList,LTail<:shapeless.HList,RTail<:shapeless.HList,OutTail<:shapeless.HList](implicitev0:shapeless.ops.record.Selector.Aux[R,K,RV],implicitev1:shapeless.ops.hlist.FilterNot.Aux[R,shapeless.labelled.FieldType[K,RV],RTail],implicitev2:libra.ops.Merge.Aux[LTail,RTail,OutTail]):libra.ops.Merge.Aux[shapeless.labelled.FieldType[K,LV]::LTail,R,shapeless.labelled.FieldType[K,(LV,RV)]::OutTail]", "kind" : "implicit def"}, {"label" : "recordExtraMergeNotInLeft", "tail" : "(): Aux[HNil, R, R]", "member" : "libra.ops.Merge.recordExtraMergeNotInLeft", "link" : "libra\/ops\/Merge$.html#recordExtraMergeNotInLeft[R<:shapeless.HList]:libra.ops.Merge.Aux[shapeless.HNil,R,R]", "kind" : "implicit def"}, {"label" : "Aux", "tail" : "", "member" : "libra.ops.Merge.Aux", "link" : "libra\/ops\/Merge$.html#Aux[L<:shapeless.HList,R<:shapeless.HList,Out0<:shapeless.HList]=libra.ops.Merge[L,R]{typeOut=Out0}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Merge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Merge$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Merge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Merge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Merge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Merge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Merge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Merge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Merge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Merge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Merge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Merge$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Merge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Merge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Merge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Merge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "libra\/ops\/Merge.html", "kind" : "trait"}, {"name" : "libra.ops.quantity", "shortDescription" : "", "object" : "libra\/ops\/quantity$.html", "members_object" : [{"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show", "kind" : "object"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show[Q<:libra.Quantity[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.quantity.ConvertTo", "link" : "libra\/ops\/quantity$.html#ConvertTo", "kind" : "object"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.quantity.ConvertTo", "link" : "libra\/ops\/quantity$.html#ConvertTo[Q<:libra.Quantity[_,_],UT<:libra.Unit[_]]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power[Q<:libra.Quantity[_,_],P<:singleton.ops.XInt]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert[Q<:libra.Quantity[_,_]]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add", "kind" : "object"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/quantity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/quantity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/quantity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/quantity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/quantity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/quantity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/quantity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/quantity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/quantity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/quantity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/quantity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/quantity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/quantity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/quantity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/quantity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/quantity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.recordExtensions", "shortDescription" : "", "object" : "libra\/ops\/recordExtensions$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/recordExtensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/recordExtensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/recordExtensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/recordExtensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/recordExtensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/recordExtensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/recordExtensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/recordExtensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/recordExtensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/recordExtensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/recordExtensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/recordExtensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/recordExtensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/recordExtensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/recordExtensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/recordExtensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.Refute", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Refute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Refute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Refute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Refute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Refute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Refute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Refute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Refute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Refute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Refute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Refute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Refute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Refute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Refute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Refute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Refute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Evidence that an implicit A is not present", "object" : "libra\/ops\/Refute$.html", "members_object" : [{"label" : "refute", "tail" : "(): Refute[A]", "member" : "libra.ops.Refute.refute", "link" : "libra\/ops\/Refute$.html#refute[A]:libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "ambiguous2", "tail" : "(ev: A): Refute[A]", "member" : "libra.ops.Refute.ambiguous2", "link" : "libra\/ops\/Refute$.html#ambiguous2[A](implicitev:A):libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "ambiguous1", "tail" : "(ev: A): Refute[A]", "member" : "libra.ops.Refute.ambiguous1", "link" : "libra\/ops\/Refute$.html#ambiguous1[A](implicitev:A):libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Refute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Refute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Refute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Refute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Refute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Refute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Refute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Refute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Refute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Refute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Refute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Refute$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Refute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Refute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Refute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Refute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "libra\/ops\/Refute.html", "kind" : "trait"}], "libra.si" : [{"name" : "libra.si.BaseQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "mA", "tail" : "(): QuantityOf[A, Current, MilliAmpere]", "member" : "libra.si.BaseQuantityOps.mA", "link" : "libra\/si\/package$$BaseQuantityOps.html#mA:libra.QuantityOf[A,libra.si.package.Current,libra.si.package.MilliAmpere]", "kind" : "def"}, {"label" : "A", "tail" : "(): QuantityOf[A, Current, Ampere]", "member" : "libra.si.BaseQuantityOps.A", "link" : "libra\/si\/package$$BaseQuantityOps.html#A:libra.QuantityOf[A,libra.si.package.Current,libra.si.package.Ampere]", "kind" : "def"}, {"label" : "ms", "tail" : "(): QuantityOf[A, Time, Millisecond]", "member" : "libra.si.BaseQuantityOps.ms", "link" : "libra\/si\/package$$BaseQuantityOps.html#ms:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Millisecond]", "kind" : "def"}, {"label" : "s", "tail" : "(): QuantityOf[A, Time, Second]", "member" : "libra.si.BaseQuantityOps.s", "link" : "libra\/si\/package$$BaseQuantityOps.html#s:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Second]", "kind" : "def"}, {"label" : "mg", "tail" : "(): QuantityOf[A, Mass, Milligram]", "member" : "libra.si.BaseQuantityOps.mg", "link" : "libra\/si\/package$$BaseQuantityOps.html#mg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Milligram]", "kind" : "def"}, {"label" : "g", "tail" : "(): QuantityOf[A, Mass, Gram]", "member" : "libra.si.BaseQuantityOps.g", "link" : "libra\/si\/package$$BaseQuantityOps.html#g:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Gram]", "kind" : "def"}, {"label" : "kg", "tail" : "(): QuantityOf[A, Mass, Kilogram]", "member" : "libra.si.BaseQuantityOps.kg", "link" : "libra\/si\/package$$BaseQuantityOps.html#kg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Kilogram]", "kind" : "def"}, {"label" : "mm", "tail" : "(): QuantityOf[A, Length, Millimetre]", "member" : "libra.si.BaseQuantityOps.mm", "link" : "libra\/si\/package$$BaseQuantityOps.html#mm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Millimetre]", "kind" : "def"}, {"label" : "cm", "tail" : "(): QuantityOf[A, Length, Centimetre]", "member" : "libra.si.BaseQuantityOps.cm", "link" : "libra\/si\/package$$BaseQuantityOps.html#cm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Centimetre]", "kind" : "def"}, {"label" : "m", "tail" : "(): QuantityOf[A, Length, Metre]", "member" : "libra.si.BaseQuantityOps.m", "link" : "libra\/si\/package$$BaseQuantityOps.html#m:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Metre]", "kind" : "def"}, {"label" : "km", "tail" : "(): QuantityOf[A, Length, Kilometre]", "member" : "libra.si.BaseQuantityOps.km", "link" : "libra\/si\/package$$BaseQuantityOps.html#km:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Kilometre]", "kind" : "def"}, {"member" : "libra.si.BaseQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.BaseQuantityOps.a", "link" : "libra\/si\/package$$BaseQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$BaseQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$BaseQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$BaseQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$BaseQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$BaseQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$BaseQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.MetricUnit", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/si\/MetricUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/si\/MetricUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/si\/MetricUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/si\/MetricUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/si\/MetricUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/si\/MetricUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/si\/MetricUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): scala.Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/si\/MetricUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): scala.Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/si\/MetricUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/si\/MetricUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/si\/MetricUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/si\/MetricUnit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/si\/MetricUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/si\/MetricUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/MetricUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/MetricUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/si\/MetricUnit.html", "kind" : "trait"}]};